{"version":3,"sources":["Components/API/api.js","Components/ImageResult/ImageResult.js","Components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Api","useState","state","setState","useEffect","axios","get","then","data","ImageResult","src","alt","Search","input","setInput","mysearch","setMysearch","clean","setClean","dataSearch","querry","results","ApiSearch","console","log","type","name","placeholder","className","value","onChange","e","target","id","onClick","map","img","key","urls","thumb","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAqCeA,MAhCf,WACI,MAA0BC,mBAAS,IAAnC,mBAAMC,EAAN,KAAcC,EAAd,KAcA,OAXAC,qBAAU,WACNC,IAAMC,IAAI,0FACbC,MAAK,SAACC,GAEDL,EAASK,EAAKA,WAKjB,IAEIN,G,OClBI,SAASO,EAAT,GAA6B,IAAPC,EAAM,EAANA,IAEjC,OAEQ,qBAAKA,IAAOA,EAAMC,IAAK,oBCGpB,SAASC,IACpB,MAAyBX,qBAAzB,mBAAMY,EAAN,KAAaC,EAAb,KACA,EAA+Bb,qBAA/B,mBAAMc,EAAN,KAAgBC,EAAhB,KACA,EAA2Bf,oBAAS,GAApC,mBAAOgB,EAAP,KAAcC,EAAd,KAOOC,EFGF,SAAmBC,GACxB,MAA0BnB,mBAAS,IAAnC,mBAAMC,EAAN,KAAcC,EAAd,KAYA,OATAC,qBAAU,WACNC,IAAMC,IAAI,uDAAuDc,EAAO,0DAC3Eb,MAAK,SAACC,GAEHL,EAASK,EAAKA,KAAKa,cAGpB,CAACD,IAEGlB,EEhBaoB,CAAUP,GAC7BQ,QAAQC,IAAIL,GACZ,IAAMX,EAAOR,IAGd,OACI,gCACI,uBAAOyB,KAAM,OAAOC,KAAO,gBAC1BC,YAAc,gBACdC,UAAW,YACXC,MAAQhB,EACRiB,SAAW,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOH,UAEpC,qBAAKD,UAAU,SAAf,SACA,wBAAQK,GAAG,MAAMC,QAlBX,WACXlB,EAAYH,GACZK,GAAS,IAgBJ,sBAEA,sBAAKU,UAAW,UAAhB,UAEMX,EAAQT,EAAK2B,KAAI,SAACC,EAAKC,GAAN,OAAe,cAAC5B,EAAD,CAAaC,IAAM0B,EAAIE,KAAKC,OAAaF,MAAW,GACzFtB,EAAeI,EAAWqB,OAASrB,EAAWgB,KAAI,SAACC,EAAKC,GAAN,OAAe,cAAC5B,EAAD,CAAaC,IAAM0B,EAAIE,KAAKC,OAAaF,MACvF,kDACT,SC3BTI,MATf,WACE,OACE,sBAAKb,UAAU,MAAf,UACC,6CACA,cAAChB,EAAD,QCIU8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b54c07df.chunk.js","sourcesContent":["\r\nimport { useState ,useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Api(){\r\n    const[state , setState] = useState([])\r\n    //const count =1;\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.unsplash.com/photos/?client_id=FRokfm7-d3PLcIl8eX8GJvOVjLCsjt879MFa54C_OjY')\r\n    .then((data) => {\r\n      \r\n          setState(data.data) \r\n        \r\n        \r\n    \r\n    })\r\n    } ,[])\r\n    \r\n    return state\r\n}\r\n  export function ApiSearch(querry){\r\n    const[state , setState] = useState([])\r\n    //const count =1;\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://api.unsplash.com/search/photos?page=1&query=\"+querry+\"&client_id=FRokfm7-d3PLcIl8eX8GJvOVjLCsjt879MFa54C_OjY\")\r\n    .then((data) => {\r\n\r\n        setState(data.data.results)\r\n                // ( data.data.total != '0') ? setState(data.data.results) : (setState([]))\r\n    })\r\n    } ,[querry])\r\n    \r\n    return state\r\n}\r\nexport default Api\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function ImageResult({src}) {\r\n   \r\n    return (\r\n           \r\n            <img src = {src}  alt =\"Image not found\" />\r\n        \r\n          \r\n              \r\n              \r\n    )\r\n         \r\n                \r\n}\r\n","import React ,{ useState} from \"react\"\r\nimport { ApiSearch } from \"../API/api\"\r\nimport Api from '../API/api';\r\n\r\nimport ImageResult from \"../ImageResult/ImageResult\"\r\n\r\n\r\n\r\n\r\nexport default function Search() {\r\n    const[input, setInput] = useState()\r\n    const[mysearch ,setMysearch] = useState()\r\n    const [clean ,setClean ] = useState(true)\r\n\r\n    \r\n    const search = () =>{\r\n        setMysearch(input)\r\n        setClean(false)\r\n    }\r\n     const dataSearch = ApiSearch(mysearch)\r\n     console.log(dataSearch)\r\n     const data = Api()\r\n    \r\n     \r\n    return (\r\n        <div>\r\n            <input type= \"text\" name = 'Photo Search '\r\n             placeholder = \"Search Images\"\r\n             className ='searchBox'\r\n             value ={input}\r\n             onChange= {(e) => setInput(e.target.value)}\r\n             /> \r\n             <div className='btnbox'>\r\n             <button id='btn' onClick = {search}>Search</button>\r\n             </div>\r\n             <div className =\"results\">\r\n\r\n                 { clean ? data.map((img ,key) =>  <ImageResult src= {img.urls.thumb} key ={key}/>) : (\"\")  }\r\n            { mysearch   ? ( dataSearch.length ? dataSearch.map((img ,key) =>  <ImageResult src= {img.urls.thumb} key ={key}/>)\r\n                              : (<h1> Image Not Found</h1>) ): \r\n                       (\"\")\r\n                     }\r\n     </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","\nimport './App.css';\nimport Search from './Components/search/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h1> Snap Shot </h1>\n     <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}